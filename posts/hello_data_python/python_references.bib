
@misc{rebackPandasdevPandasPandas2020,
  title = {Pandas-Dev/Pandas: {{Pandas}} 1.0.3},
  shorttitle = {Pandas-Dev/Pandas},
  author = {Reback, Jeff and McKinney, Wes and {jbrockmendel} and den Bossche, Joris Van and Augspurger, Tom and Cloud, Phillip and {gfyoung} and Sinhrks and Klein, Adam and Roeschke, Matthew and Hawkins, Simon and Tratner, Jeff and She, Chang and Ayd, William and Petersen, Terji and Garcia, Marc and Schendel, Jeremy and Hayden, Andy and MomIsBestFriend and Jancauskas, Vytautas and Battiston, Pietro and Seabold, Skipper and {chris-b1} and {h-vetinari} and Hoyer, Stephan and Overmeire, Wouter and {alimcmaster1} and Dong, Kaiqi and Whelan, Christopher and Mehyar, Mortada},
  year = {2020},
  month = mar,
  doi = {10.5281/zenodo.3715232},
  abstract = {This is a minor bug-fix release in the 1.0.x series and includes some regression fixes and bug fixes. We recommend that all users upgrade to this version. See the full whatsnew for a list of all the changes. The release will be available on the defaults and conda-forge channels: conda install pandas Or via PyPI: python3 -m pip install --upgrade pandas Please report any issues with the release on the pandas issue tracker.},
  howpublished = {Zenodo},
  file = {/home/iain/Documents/Work/Zotero/storage/EVJD4MUM/3715232.html}
}

@article{wickham2014,
	title = {Tidy Data},
	author = {Wickham, Hadley},
	year = {2014},
	month = {09},
	date = {2014-09-12},
	journal = {Journal of Statistical Software},
	pages = {1--23},
	volume = {59},
	number = {1},
	doi = {10.18637/jss.v059.i10},
	url = {https://www.jstatsoft.org/index.php/jss/article/view/v059i10},
	langid = {en}
}

@article{waskomSeabornStatisticalData2021,
  title = {Seaborn: Statistical Data Visualization},
  shorttitle = {Seaborn},
  author = {Waskom, Michael L.},
  year = {2021},
  month = apr,
  journal = {Journal of Open Source Software},
  volume = {6},
  number = {60},
  pages = {3021},
  issn = {2475-9066},
  doi = {10.21105/joss.03021},
  abstract = {Waskom, M. L., (2021). seaborn: statistical data visualization. Journal of Open Source Software, 6(60), 3021, https://doi.org/10.21105/joss.03021},
  langid = {english}
}


@article{virtanenSciPyFundamentalAlgorithms2020,
  title = {{{SciPy}} 1.0: Fundamental Algorithms for Scientific Computing in {{Python}}},
  shorttitle = {{{SciPy}} 1.0},
  author = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and Haberland, Matt and Reddy, Tyler and Cournapeau, David and Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and Bright, Jonathan and {van der Walt}, St{\'e}fan J. and Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and Mayorov, Nikolay and Nelson, Andrew R. J. and Jones, Eric and Kern, Robert and Larson, Eric and Carey, C. J. and Polat, {\.I}lhan and Feng, Yu and Moore, Eric W. and VanderPlas, Jake and Laxalde, Denis and Perktold, Josef and Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and Harris, Charles R. and Archibald, Anne M. and Ribeiro, Ant{\^o}nio H. and Pedregosa, Fabian and {van Mulbregt}, Paul},
  year = {2020},
  month = mar,
  journal = {Nature Methods},
  volume = {17},
  number = {3},
  pages = {261--272},
  publisher = {{Nature Publishing Group}},
  issn = {1548-7105},
  doi = {10.1038/s41592-019-0686-2},
  abstract = {SciPy is an open-source scientific computing library for the Python programming language. Since its initial release in 2001, SciPy has become a de facto standard for leveraging scientific algorithms in Python, with over 600 unique code contributors, thousands of dependent packages, over 100,000 dependent repositories and millions of downloads per year. In this work, we provide an overview of the capabilities and development practices of SciPy 1.0 and highlight some recent technical developments.},
  copyright = {2020 The Author(s)},
  langid = {english},
  keywords = {Biophysical chemistry,Computational biology and bioinformatics,Technology},
  file = {/home/iain/Documents/Work/Zotero/storage/M7JRPRWT/Virtanen et al_2020_SciPy 1.pdf;/home/iain/Documents/Work/Zotero/storage/2DAM4GID/s41592-019-0686-2.html}
}


@article{vallatPingouinStatisticsPython2018,
  title = {Pingouin: Statistics in {{Python}}},
  shorttitle = {Pingouin},
  author = {Vallat, Raphael},
  year = {2018},
  month = nov,
  journal = {Journal of Open Source Software},
  volume = {3},
  number = {31},
  pages = {1026},
  issn = {2475-9066},
  doi = {10.21105/joss.01026},
  abstract = {Python is currently the fastest growing programming language in the world, thanks to its ease-of-use, fast learning curve and its numerous high quality packages for data science and machine-learning. Surprisingly however, Python is far behind the R programming language when it comes to general statistics and for this reason many scientists still rely heavily on R to perform their statistical analyses.},
  langid = {english},
  file = {/home/iain/Documents/Work/Zotero/storage/JPHB5F54/Vallat - 2018 - Pingouin statistics in Python.pdf}
}


@article{salvatierProbabilisticProgrammingPython2016,
  title = {Probabilistic Programming in {{Python}} Using {{PyMC3}}},
  author = {Salvatier, John and Wiecki, Thomas V. and Fonnesbeck, Christopher},
  year = {2016},
  month = apr,
  journal = {PeerJ Computer Science},
  volume = {2},
  pages = {e55},
  publisher = {{PeerJ Inc.}},
  issn = {2376-5992},
  doi = {10.7717/peerj-cs.55},
  abstract = {Probabilistic programming allows for automatic Bayesian inference on user-defined probabilistic models. Recent advances in Markov chain Monte Carlo (MCMC) sampling allow inference on increasingly complex models. This class of MCMC, known as Hamiltonian Monte Carlo, requires gradient information which is often not readily available. PyMC3 is a new open source probabilistic programming framework written in Python that uses Theano to compute gradients via automatic differentiation as well as compile probabilistic programs on-the-fly to C for increased speed. Contrary to other probabilistic programming languages, PyMC3 allows model specification directly in Python code. The lack of a domain specific language allows for great flexibility and direct interaction with the model. This paper is a tutorial-style introduction to this software package.},
  langid = {english},
  file = {/home/iain/Documents/Work/Zotero/storage/8G7G2NHL/Salvatier et al_2016_Probabilistic programming in Python using PyMC3.pdf;/home/iain/Documents/Work/Zotero/storage/NSPJMVFI/cs-55.html}
}


@article{kumarArviZUnifiedLibrary2019a,
  title = {{{ArviZ}} a Unified Library for Exploratory Analysis of {{Bayesian}} Models in {{Python}}},
  author = {Kumar, Ravin and Carroll, Colin and Hartikainen, Ari and Martin, Osvaldo},
  year = {2019},
  month = jan,
  journal = {Journal of Open Source Software},
  volume = {4},
  number = {33},
  pages = {1143},
  issn = {2475-9066},
  doi = {10.21105/joss.01143},
  abstract = {Kumar et al., (2019). ArviZ a unified library for exploratory analysis of Bayesian models in Python. Journal of Open Source Software, 4(33), 1143, https://doi.org/10.21105/joss.01143},
  langid = {english},
  file = {/home/iain/Documents/Work/Zotero/storage/PYMBM53F/Kumar et al_2019_ArviZ a unified library for exploratory analysis of Bayesian models in Python.pdf;/home/iain/Documents/Work/Zotero/storage/5Y75DS6S/joss.html}
}


@misc{caprettoBambiSimpleInterface2022,
  title = {Bambi: {{A}} Simple Interface for Fitting {{Bayesian}} Linear Models in {{Python}}},
  shorttitle = {Bambi},
  author = {Capretto, Tom{\'a}s and Piho, Camen and Kumar, Ravin and Westfall, Jacob and Yarkoni, Tal and Martin, Osvaldo A.},
  year = {2022},
  month = jan,
  number = {arXiv:2012.10754},
  eprint = {2012.10754},
  eprinttype = {arxiv},
  primaryclass = {stat},
  publisher = {{arXiv}},
  doi = {10.48550/arXiv.2012.10754},
  abstract = {The popularity of Bayesian statistical methods has increased dramatically in recent years across many research areas and industrial applications. This is the result of a variety of methodological advances with faster and cheaper hardware as well as the development of new software tools. Here we introduce an open source Python package named Bambi (BAyesian Model Building Interface) that is built on top of the PyMC probabilistic programming framework and the ArviZ package for exploratory analysis of Bayesian models. Bambi makes it easy to specify complex generalized linear hierarchical models using a formula notation similar to those found in R. We demonstrate Bambi's versatility and ease of use with a few examples spanning a range of common statistical models including multiple regression, logistic regression, and mixed-effects modeling with crossed group specific effects. Additionally we discuss how automatic priors are constructed. Finally, we conclude with a discussion of our plans for the future development of Bambi.},
  archiveprefix = {arXiv},
  keywords = {Statistics - Computation},
  file = {/home/iain/Documents/Work/Zotero/storage/Y3ZJDPCA/Capretto et al_2022_Bambi.pdf}
}


@article{gelmanDonCalculatePosthoc2019,
  title = {Don't {{Calculate Post-hoc Power Using Observed Estimate}} of {{Effect Size}}},
  author = {Gelman, Andrew},
  year = {2019},
  month = jan,
  journal = {Annals of Surgery},
  volume = {269},
  number = {1},
  pages = {e9-e10},
  issn = {1528-1140},
  doi = {10.1097/SLA.0000000000002908},
  langid = {english},
  pmid = {29994928},
  keywords = {Diabetes Mellitus; Type 2,Humans,Military Personnel},
  file = {/home/iain/Documents/Work/Zotero/storage/FE7RMD8E/Gelman_2019_Don't Calculate Post-hoc Power Using Observed Estimate of Effect Size.pdf}
}









